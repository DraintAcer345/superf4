#summary How to build SuperF4
#labels Featured,Phase-Implementation

= Introduction =

First you need to download the SuperF4 source code, [http://code.google.com/p/superf4/source/checkout instructions here].

= Compiler =

I use [http://mingw-w64.sourceforge.net/ mingw-w64] to build SuperF4. Contrary to its name, there is also a 32-bit compiler available. You need the 32-bit toolchain to build 32-bit executables, and the 64-bit toolchain to build 64-bit executables. So if you want to build for both 32-bit and 64-bit, you will need to get both toolchains.

The mingw-w64 file download section is a mess, but here are download links for the 1.0 release: [http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Automated%20Builds/mingw-w32-1.0-bin_i686-mingw_20091109.zip/download 32-bit toolchain], [http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Automated%20Builds/mingw-w64-1.0-bin_i686-mingw_20091109.zip/download 64-bit toolchain]. It doesn't matter where you extract them.

I previously used the normal [http://www.mingw.org/ MinGW] to build SuperF4, but changed because they never update it anymore. However, you can still build SuperF4 with it, but you must modify _build.bat_. Note that you need mingw-w64 if you want to compile 64-bit versions.

= Configure PATH =

After download the compilers, you need to add them to the PATH variable so the build script can use the them. Do this by _right clicking_ on the _Computer_ desktop icon, go to the _Advanced_ tab, press the _Environment variables_ button, locate the PATH variable and add _<mingw-w64 path>\bin_ to the list, and press ok on all the dialogs. If you want to build both 32-bit and 64-bit, add both to the PATH.

Here is an example of my PATH variable: _C:\mingw-w32\bin;C:\mingw-w64\bin_

If you had the terminal open when you changed the PATH variable, you must restart it.

= Installer =

If you want to build the installer you need [http://nsis.sourceforge.net/ NSIS] (or [http://www.scratchpaper.com/ NSIS Unicode]). Put it in PATH as well.

= Build it =

Now everything should hopefully work when you run _build.bat_. It's more comfortable to run it in a terminal so you can see all the output. You can also run _build run_ to automatically run SuperF4 after it has been built. To build a release version use _build all_, this will also build the installer.

To build 64-bit versions use _build x64_ and _build all x64_.

Add a comment if you need help.